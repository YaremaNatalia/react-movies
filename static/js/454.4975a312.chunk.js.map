{"version":3,"file":"static/js/454.4975a312.chunk.js","mappings":"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","sources":["webpack://react-movies/./src/components/ButtonBack/ButtonBack.module.css?8b4f","components/ButtonBack/ButtonBack.jsx","pages/MovieDetailsPage.jsx","services/api.js","webpack://react-movies/./src/pages/Page.module.css?92b2"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btnBack\":\"ButtonBack_btnBack__tjozC\"};","import React from 'react';\nimport css from './ButtonBack.module.css';\n\nconst ButtonBack = () => {\n  return (\n    <button type=\"button\" className={css.btnBack}>\n      GoBack\n    </button>\n  );\n};\n\nexport default ButtonBack;","import React, { Suspense, lazy, useEffect, useRef, useState } from 'react';\n\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader';\nimport {\n  Link,\n  NavLink,\n  Route,\n  Routes,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport ButtonBack from 'components/ButtonBack/ButtonBack';\nimport { fetchMovieDetails } from 'services/api';\nimport { IMAGE_URL_W500 } from 'services/api';\nimport imgNotFound from '../images/not_found.jpg';\n\nimport css from './Page.module.css';\n\nconst CastPage = lazy(() => import('pages/CastPage'));\nconst ReviewsPage = lazy(() => import('pages/ReviewsPage'));\n\nconst MovieDetails = () => {\n  const [movieDet, setMovieDet] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieDetailsData = async () => {\n      try {\n        setIsLoading(true);\n\n        const movieDetales = await fetchMovieDetails(movieId);\n\n        setMovieDet(movieDetales);\n      } catch (error) {\n        setError(error.message);\n        toast.error(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieDetailsData();\n  }, [movieId]);\n\n  const { title, release_date, poster_path, vote_average, overview, genres } =\n    movieDet ?? {};\n  // const defaultImg =\n  //   'https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg';\n  const releaseYear = release_date ? release_date.split('-')[0] : '';\n\n  return (\n    <div>\n      {error && (\n        <p className=\"errorMessage\">Whoops, something went wrong: {error}</p>\n      )}\n      {isLoading && <Loader />}\n      {movieDet && (\n        <div className={css.container}>\n          <Link to={backLink.current}>\n            <ButtonBack />\n          </Link>\n          <div className={css.containerMovieCard}>\n            <div className={css.movieWrap}>\n              <img\n                className={css.movieImg}\n                src={\n                  poster_path ? `${IMAGE_URL_W500}${poster_path}` : imgNotFound\n                }\n                alt={title}\n              />\n              <div className={css.movieInfoWrap}>\n                <h1 className={css.movieTitle}>\n                  {title} ({releaseYear})\n                </h1>\n\n                <h2 className={css.moviePretitle}>\n                  User score: {Math.round(vote_average * 10)}%\n                </h2>\n                <p className={css.movieText}>\n                  Overview <br /> {overview}\n                </p>\n                <h2 className={css.moviePretitle}>Genres:</h2>\n                <p className={css.movieText}>\n                  {genres.map(genre => genre.name).join(' ')}\n                </p>\n              </div>\n            </div>\n            <h2 className={css.moviePretitle}>Additional information</h2>\n            <div className={css.containerLink}>\n              <NavLink to=\"cast\" className={css.linkItem}>\n                Cast\n              </NavLink>\n              <NavLink to=\"reviews\" className={css.linkItem}>\n                Reviews\n              </NavLink>\n            </div>\n            <div>\n              <Suspense fallback={<Loader />}>\n                <Routes>\n                  <Route path=\"cast\" element={<CastPage />} />\n                  <Route path=\"reviews\" element={<ReviewsPage />} />\n                </Routes>\n              </Suspense>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst KEY = 'b77fdf4e8642f590f33f1ce34d9000b8';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/day`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nconst IMAGE_URL_W500 = 'https://image.tmdb.org/t/p/w500';\n\n\nconst fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`${TREND_URL}?api_key=${KEY}`);\n\n  return data;\n};\n\nconst fetchSearchQuery = async query => {\n  const { data } = await axios.get(\n    `${SEARCH_URL}?api_key=${KEY}&query=${query}`\n  );\n\n  return data;\n};\n\nconst fetchMovieDetails = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movie_id}?api_key=${KEY}`\n  );\n  return data;\n};\n\nconst fetchMovieCast = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movie_id}/credits?api_key=${KEY}`\n  );\n \n  return data;\n};\n\nconst fetchMovieReviews = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movie_id}/reviews?api_key=${KEY}`\n  );\n  return data;\n};\n\nexport {\n  fetchTrendingMovies,\n  fetchSearchQuery,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews,\n  IMAGE_URL_W500,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"textError\":\"Page_textError__hlQL6\",\"container\":\"Page_container__27Iu9\",\"containerMovieCard\":\"Page_containerMovieCard__awdYE\",\"movieImg\":\"Page_movieImg__ThOQM\",\"movieWrap\":\"Page_movieWrap__BHxHt\",\"movieInfoWrap\":\"Page_movieInfoWrap__4yGPF\",\"movieTitle\":\"Page_movieTitle__-p4sG\",\"moviePretitle\":\"Page_moviePretitle__arWLI\",\"containerLink\":\"Page_containerLink__yZCQx\",\"movieText\":\"Page_movieText__h2Ev-\",\"linkItem\":\"Page_linkItem__Fn4OL\",\"castPageСontainer\":\"Page_castPageСontainer__0cEVw\",\"castTitle\":\"Page_castTitle__UztKX\",\"castList\":\"Page_castList__WPuYY\",\"castItem\":\"Page_castItem__dKeFz\",\"castImg\":\"Page_castImg__6cMUL\",\"castInfo\":\"Page_castInfo__FPWZO\",\"reviewsPageContainer\":\"Page_reviewsPageContainer__R22l8\",\"reviewsTitle\":\"Page_reviewsTitle__DPdB2\",\"reviewsList\":\"Page_reviewsList__t6bR9\",\"reviewsItem\":\"Page_reviewsItem__a0oA-\",\"reviewsAutor\":\"Page_reviewsAutor__JlJck\",\"reviewsText\":\"Page_reviewsText__2ZA32\"};"],"names":["type","className","css","CastPage","lazy","ReviewsPage","useState","movieDet","setMovieDet","isLoading","setIsLoading","error","setError","movieId","useParams","location","useLocation","backLink","useRef","state","from","useEffect","fetchMovieDetailsData","fetchMovieDetails","movieDetales","message","toast","title","release_date","poster_path","vote_average","overview","genres","releaseYear","split","Loader","to","current","src","IMAGE_URL_W500","imgNotFound","alt","Math","round","map","genre","name","join","Suspense","fallback","path","element","KEY","BASE_URL","TREND_URL","SEARCH_URL","fetchTrendingMovies","axios","data","fetchSearchQuery","query","movie_id","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}