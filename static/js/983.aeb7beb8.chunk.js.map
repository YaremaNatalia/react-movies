{"version":3,"file":"static/js/983.aeb7beb8.chunk.js","mappings":"2JACA,EAA4B,8B,iBCA5B,EAA4B,6BAA5B,EAAwE,gCAAxE,EAAwH,iCAAxH,EAA0K,kC,2BCM7JA,EAAY,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACxCC,GAAWC,EAAAA,EAAAA,MAIjB,OACE,SAAC,KAAD,CACEC,UAAWC,EACXC,MAAO,CAAEC,KAAML,GACfM,GAAE,kBAAaP,GAHjB,UAKE,2BACE,gBACEG,UAAWC,EACXI,IAAKV,EAAW,UAAMW,EAAAA,IAAN,OAAuBX,GAAgBY,EACvDC,IAAKZ,KAEP,gBAAKI,UAAWC,EAAhB,UACE,cAAGD,UAAWC,EAAd,SAAmCL,UAK5C,ECxBYa,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B,OACE,eAAIV,UAAWC,EAAf,SACGS,EAAOC,KAAI,gBAAGd,EAAH,EAAGA,GAAIF,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACV,SAACF,EAAD,CAEEC,YAAaA,EACbC,MAAOA,EACPC,GAAIA,GAHCA,EAFG,KAUjB,C,2HC0BD,UAtCiB,WACf,OAA4Be,EAAAA,EAAAA,UAAS,IAArC,eAAOF,EAAP,KAAeG,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAuBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,sGAEpBJ,GAAa,GAFO,UAIOK,EAAAA,EAAAA,MAJP,gBAIXC,EAJW,EAIXA,QAETR,EAAUQ,GACVN,GAAa,GAPO,kDASpBE,EAAS,KAAMK,SACfC,EAAAA,GAAAA,MAAY,KAAMD,SAVE,yBAYpBP,GAAa,GAZO,6EAAH,qDAgBrBI,GACD,GAAE,KAGD,4BACE,eAAInB,UAAU,gBAAd,SAA8B,mBAC7BgB,IACC,eAAGhB,UAAU,eAAb,UAA4B,iCAA+BgB,KAE5DN,EAAOc,OAAS,IAAK,SAAC,IAAD,CAAYd,OAAQA,IACzCI,IAAa,SAAC,IAAD,MAGnB,C,uNCzCKW,EAAM,mCACNC,EAAW,+BACXC,EAAS,UAAMD,EAAN,uBACTE,EAAU,UAAMF,EAAN,iBACVpB,EAAiB,kCAGjBc,EAAmB,mCAAG,sGACHS,EAAAA,EAAAA,IAAA,UAAaF,EAAb,oBAAkCF,IAD/B,uBAClBK,EADkB,EAClBA,KADkB,kBAGnBA,GAHmB,2CAAH,qDAMnBC,EAAgB,mCAAG,WAAMC,GAAN,yFACAH,EAAAA,EAAAA,IAAA,UAClBD,EADkB,oBACIH,EADJ,kBACiBO,IAFjB,uBACfF,EADe,EACfA,KADe,kBAKhBA,GALgB,2CAAH,sDAQhBG,EAAiB,mCAAG,WAAMC,GAAN,yFACDL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,oBACoBT,IAFnB,uBAChBK,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,sDAOjBK,EAAc,mCAAG,WAAMD,GAAN,yFACEL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC4BT,IAF9B,uBACbK,EADa,EACbA,KADa,kBAKdA,GALc,2CAAH,sDAQdM,EAAiB,mCAAG,WAAMF,GAAN,yFACDL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC4BT,IAF3B,uBAChBK,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,qD","sources":["webpack://react-movies/./src/components/MoviesList/MoviesList.module.css?de3d","webpack://react-movies/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MoviesList_movieList__8BnEE\"};","// extracted by mini-css-extract-plugin\nexport default {\"movieLink\":\"MovieCard_movieLink__+HjyM\",\"movieCardImg\":\"MovieCard_movieCardImg__ViEeF\",\"movieCardInfo\":\"MovieCard_movieCardInfo__we+78\",\"movieCardTitle\":\"MovieCard_movieCardTitle__EpyYN\"};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './MovieCard.module.css';\nimport { IMAGE_URL_W500 } from 'services/api';\nimport PropTypes from 'prop-types';\nimport imgNotFound from '../../images/not_found.jpg';\n\nexport const MovieCard = ({ poster_path, title, id }) => {\n  const location = useLocation();\n  // const defaultImg =\n  //   'https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg';\n\n  return (\n    <Link\n      className={css.movieLink}\n      state={{ from: location }}\n      to={`/movies/${id}`}\n    >\n      <li>\n        <img\n          className={css.movieCardImg}\n          src={poster_path ? `${IMAGE_URL_W500}${poster_path}` : imgNotFound}\n          alt={title}\n        />\n        <div className={css.movieCardInfo}>\n          <p className={css.movieCardTitle}>{title}</p>\n        </div>\n      </li>\n    </Link>\n  );\n};\n\nMovieCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string,\n  poster_path: PropTypes.string,\n};\n\nexport default MovieCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport css from './MoviesList.module.css';\nimport { MovieCard } from 'components/MovieCard';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <ul className={css.movieList}>\n      {movies.map(({ id, poster_path, title }) => (\n        <MovieCard\n          key={id}\n          poster_path={poster_path}\n          title={title}\n          id={id}\n        ></MovieCard>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader';\nimport { MoviesList } from 'components/MoviesList';\nimport { fetchTrendingMovies } from 'services/api';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n\n  useEffect(() => {\n    const fetchMoviesData = async () => {\n      try {\n        setIsLoading(true);\n\n         const { results } = await fetchTrendingMovies();\n\n        setMovies(results);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error.message);\n        toast.error(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMoviesData();\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"homePageTitle\">Trending today</h1>\n      {error && (\n        <p className=\"errorMessage\">Whoops, something went wrong: {error}</p>\n      )}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst KEY = 'b77fdf4e8642f590f33f1ce34d9000b8';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/day`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nconst IMAGE_URL_W500 = 'https://image.tmdb.org/t/p/w500';\n\n\nconst fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`${TREND_URL}?api_key=${KEY}`);\n\n  return data;\n};\n\nconst fetchSearchQuery = async query => {\n  const { data } = await axios.get(\n    `${SEARCH_URL}?api_key=${KEY}&query=${query}`\n  );\n\n  return data;\n};\n\nconst fetchMovieDetails = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movie_id}?api_key=${KEY}`\n  );\n  return data;\n};\n\nconst fetchMovieCast = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movie_id}/credits?api_key=${KEY}`\n  );\n \n  return data;\n};\n\nconst fetchMovieReviews = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movie_id}/reviews?api_key=${KEY}`\n  );\n  return data;\n};\n\nexport {\n  fetchTrendingMovies,\n  fetchSearchQuery,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews,\n  IMAGE_URL_W500,\n};\n"],"names":["MovieCard","poster_path","title","id","location","useLocation","className","css","state","from","to","src","IMAGE_URL_W500","imgNotFound","alt","MoviesList","movies","map","useState","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchMoviesData","fetchTrendingMovies","results","message","toast","length","KEY","BASE_URL","TREND_URL","SEARCH_URL","axios","data","fetchSearchQuery","query","fetchMovieDetails","movie_id","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}